# Prompt-defined pipeline specification
# Fill in your dataset paths and column names, and tweak the split/metrics as needed.
dataset:
  name: "${dataset_name}"
  resources:
    # 只提供原始完整数据文件，划分由代码执行
    full_file: "../data/${dataset_name}/CP_data.csv"   # <-- 这里改为完整数据路径
  columns:
    smiles: "SMILES"
    plate: "plate_id"
    targets: ["y"]
    deg_flag: "is_deg"
    systema_flag: "is_systema"
  options:
    has_precomputed_features: false

split:
  # 指定划分由代码内部完成
  method: "leave-smiles-out"   # 可改为 leave-plates-out
  n_folds: 5
  group_column_override: ""
  save_split: true                      # 新增参数：是否保存划分结果
  save_split_dir: "../data/${dataset_name}/splits"  # 新增：保存划分后的索引或CSV的路径
  random_state: 22                      # 新增：随机种子
metrics:
  primary: "PCC"  # Choose from: PCC, RMSE, DEG_PCC, DEG_RMSE, Direction_ACC, Systema_PCC, Systema_RMSE
  list: ["PCC", "RMSE", "DEG_PCC", "DEG_RMSE", "Direction_ACC", "Systema_PCC", "Systema_RMSE"]
  direction_threshold: 0.0  # >= threshold means "up", < threshold means "down"

modeling:
  # Give high-level preferences only; the LLM will pick the exact algorithms.
  preferences:
    - "Start with linear/elastic net baselines; consider tree ensembles if nonlinearity is evident."
    - "Standardize numeric features; stratify if applicable."
    - "Use deterministic seeds for reproducibility."
  constraints:
    - "Do NOT leak test folds into training in any way."
    - "Honor the grouping and fairness constraints for CV."
    - "Report and save per-fold & aggregated metrics to metrics.json."

runtime:
  seed: 22
  save_dir: "./results/${dataset_name}/generate_execution/prompt_runs"  # base dir; a timestamped subdir will be created

# The agent should generate a SINGLE self-contained Python script that:
# - Loads the specified data
# - Builds 5-fold CV with the chosen grouping protocol
# - Trains reasonable baseline models
# - Computes all requested metrics
# - Saves metrics.json and a small text log
# - Prints the final aggregated metrics
